#!/usr/bin/env ruby
#
# Setup my super awesome dotfiles yay! This will:
#
## git submodule init && git submodule update
## symlink non-dot files and directories to their dotfile equivalent in $HOME
## exit non zero if the dot file or directory exists and is not a symlink

def git(command, *args)
  arguments = args.map {|a| a.to_s }.join(' ')
  output = %x{git #{command} #{arguments} 2>&1}

  abort output unless $?.success?
end

dir       = File.dirname(__FILE__)
home      = ENV['HOME']
localpath = dir.sub(home, '~')

Dir.chdir dir

git :submodule, :init
git :submodule, :update

Dir.glob(File.join(dir, '*')) do |path|
  name = File.basename(path)

  next if name =~ /^\./  #skip dotfiles

  dotpath  = File.join(home, ".#{name}")
  fullpath = File.join(localpath, name)

  if File.symlink?(dotpath)
    linkpath = File.readlink(dotpath)

    if linkpath != fullpath
      abort "#{dotpath} is improperly symlinked to #{linkpath}"
    end
  elsif File.exists?(dotpath)
    abort "#{dotpath} exists but is not a symlink to #{dotpath}"
  else
    File.symlink(fullpath, dotpath)
  end
end

exit 0
